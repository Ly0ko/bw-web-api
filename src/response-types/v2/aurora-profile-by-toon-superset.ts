import { z } from "zod";

export const AuroraProfileByToonSupersetResponseSchema = z.object({
  account_flags: z.string(),
  aurora_id: z.number(),
  avatars: z.record(z.string(), z.string()),
  avatars_framed: z.record(
    z.string(),
    z.object({
      level: z.number(),
      stat: z.string(),
      url: z.string(),
    })
  ),
  avatars_unlocked: z.record(
    z.string(),
    z.object({
      level: z.number(),
      stat: z.string(),
      url: z.string(),
    })
  ),
  battle_tag: z.string(),
  country_code: z.string(),
  game_results: z.array(
    z.object({
      attributes: z.object({
        client_version: z.string(),
        mapName: z.string(),
        tileset: z.string(),
      }),
      benefactor_id: z.string(),
      create_time: z.string(),
      game_id: z.string(),
      gateway_id: z.number(),
      match_guid: z.string(),
      players: z.array(
        z.union([
          z.object({
            attributes: z.object({
              gPlayerData_idx: z.string(),
              left: z.string(),
              race: z.string(),
              team: z.string(),
              type: z.string(),
            }),
            result: z.string(),
            stats: z.union([
              z.strictObject({}),
              z.intersection(
                z.object({
                  zerg_apm: z.string(),
                  zerg_games_played: z.string(),
                  zerg_play_time: z.string(),
                  zerg_resources_gas: z.string(),
                  zerg_resources_minerals: z.string(),
                  zerg_resources_score: z.string(),
                  zerg_resources_spent: z.string(),
                  zerg_score_overall: z.string(),
                  zerg_structures_constructed: z.string(),
                  zerg_structures_lost: z.string(),
                  zerg_structures_razed: z.string(),
                  zerg_structures_score: z.string(),
                  zerg_units_killed: z.string(),
                  zerg_units_lost: z.string(),
                  zerg_units_produced: z.string(),
                  zerg_units_score: z.string(),
                }),
                z.union([
                  z.object({
                    zerg_draws: z.string(),
                  }),
                  z.object({
                    zerg_losses: z.string(),
                  }),
                  z.object({
                    zerg_wins: z.string(),
                  }),
                ])
              ),
              z.intersection(
                z.object({
                  terran_apm: z.string(),
                  terran_games_played: z.string(),
                  terran_play_time: z.string(),
                  terran_resources_gas: z.string(),
                  terran_resources_minerals: z.string(),
                  terran_resources_score: z.string(),
                  terran_resources_spent: z.string(),
                  terran_score_overall: z.string(),
                  terran_structures_constructed: z.string(),
                  terran_structures_lost: z.string(),
                  terran_structures_razed: z.string(),
                  terran_structures_score: z.string(),
                  terran_units_killed: z.string(),
                  terran_units_lost: z.string(),
                  terran_units_produced: z.string(),
                  terran_units_score: z.string(),
                }),
                z.union([
                  z.object({
                    terran_draws: z.string(),
                  }),
                  z.object({
                    terran_losses: z.string(),
                  }),
                  z.object({
                    terran_wins: z.string(),
                  }),
                ])
              ),
              z.intersection(
                z.object({
                  protoss_apm: z.string(),
                  protoss_games_played: z.string(),
                  protoss_play_time: z.string(),
                  protoss_resources_gas: z.string(),
                  protoss_resources_minerals: z.string(),
                  protoss_resources_score: z.string(),
                  protoss_resources_spent: z.string(),
                  protoss_score_overall: z.string(),
                  protoss_structures_constructed: z.string(),
                  protoss_structures_lost: z.string(),
                  protoss_structures_razed: z.string(),
                  protoss_structures_score: z.string(),
                  protoss_units_killed: z.string(),
                  protoss_units_lost: z.string(),
                  protoss_units_produced: z.string(),
                  protoss_units_score: z.string(),
                }),
                z.union([
                  z.object({
                    protoss_draws: z.string(),
                  }),
                  z.object({
                    protoss_losses: z.string(),
                  }),
                  z.object({
                    protoss_wins: z.string(),
                  }),
                ])
              ),
            ]),
            toon: z.string(),
          }),
          z.object({
            attributes: z.object({
              gPlayerData_idx: z.string(),
              left: z.string(),
              type: z.string(),
            }),
            result: z.string(),
            stats: z.object({}),
            toon: z.string(),
          }),
          z.object({
            attributes: z.object({
              gPlayerData_idx: z.string(),
              left: z.string(),
              race: z.string(),
              team: z.string(),
              type: z.string(),
            }),
            result: z.string(),
            stats: z.object({}),
            toon: z.string(),
          }),
        ])
      ),
    })
  ),
  matchmaked_current_season: z.number(),
  matchmaked_current_season_buckets: z.array(z.number()),
  matchmaked_stats: z.array(
    z.object({
      benefactor_id: z.string(),
      bucket: z.number(),
      disconnects: z.number(),
      game_mode_id: z.number(),
      highest_points: z.number(),
      highest_rating: z.number(),
      loss_streak: z.number(),
      losses: z.number(),
      points: z.number(),
      rating: z.number(),
      season_id: z.number(),
      toon: z.string(),
      toon_guid: z.number(),
      win_streak: z.number(),
      wins: z.number(),
    })
  ),
  profiles: z
    .array(
      z.object({
        avatar_id: z.string(),
        description: z.string(),
        private: z.boolean(),
        show_avatar_frame: z.boolean(),
        title: z.string(),
        toon: z.string(),
        toon_guid: z.number(),
      })
    )
    .nullable(),
  program_id: z.string(),
  replays: z.array(
    z.object({
      attributes: z.object({
        game_creator: z.string(),
        game_id: z.string(),
        game_name: z.string(),
        game_save_id: z.string(),
        game_speed: z.string(),
        game_sub_type: z.string(),
        game_type: z.string(),
        map_era: z.string(),
        map_height: z.string(),
        map_title: z.string(),
        map_width: z.string(),
        replay_description: z.string(),
        replay_humans: z.string(),
        replay_map_number: z.string(),
        replay_max_players: z.string(),
        replay_min_players: z.string(),
        replay_opponents: z.string(),
        replay_player_names: z.string(),
        replay_player_races: z.string(),
        replay_player_types: z.string(),
        replay_result: z.string(),
      }),
      create_time: z.number(),
      link: z.string(),
    })
  ),
  stats: z.array(
    z.object({
      benefactor_id: z.string(),
      gateway_id: z.number(),
      raw: z.object({
        legacy_disconnects: z.number(),
        legacy_losses: z.number(),
        legacy_toon_creation_time: z.number(),
        legacy_wins: z.number(),
        protoss_apm_max: z.number(),
        protoss_apm_min: z.number(),
        protoss_apm_sum: z.number(),
        protoss_disconnects_max: z.number(),
        protoss_disconnects_min: z.number(),
        protoss_disconnects_sum: z.number(),
        protoss_draws_max: z.number(),
        protoss_draws_min: z.number(),
        protoss_draws_sum: z.number(),
        protoss_losses_max: z.number(),
        protoss_losses_min: z.number(),
        protoss_losses_sum: z.number(),
        protoss_play_time_max: z.number(),
        protoss_play_time_min: z.number(),
        protoss_play_time_sum: z.number(),
        protoss_resources_gas_max: z.number(),
        protoss_resources_gas_min: z.number(),
        protoss_resources_gas_sum: z.number(),
        protoss_resources_minerals_max: z.number(),
        protoss_resources_minerals_min: z.number(),
        protoss_resources_minerals_sum: z.number(),
        protoss_resources_score_max: z.number(),
        protoss_resources_score_min: z.number(),
        protoss_resources_score_sum: z.number(),
        protoss_resources_spent_max: z.number(),
        protoss_resources_spent_min: z.number(),
        protoss_resources_spent_sum: z.number(),
        protoss_structures_constructed_max: z.number(),
        protoss_structures_constructed_min: z.number(),
        protoss_structures_constructed_sum: z.number(),
        protoss_structures_lost_max: z.number(),
        protoss_structures_lost_min: z.number(),
        protoss_structures_lost_sum: z.number(),
        protoss_structures_razed_max: z.number(),
        protoss_structures_razed_min: z.number(),
        protoss_structures_razed_sum: z.number(),
        protoss_structures_score_max: z.number(),
        protoss_structures_score_min: z.number(),
        protoss_structures_score_sum: z.number(),
        protoss_units_killed_max: z.number(),
        protoss_units_killed_min: z.number(),
        protoss_units_killed_sum: z.number(),
        protoss_units_lost_max: z.number(),
        protoss_units_lost_min: z.number(),
        protoss_units_lost_sum: z.number(),
        protoss_units_produced_max: z.number(),
        protoss_units_produced_min: z.number(),
        protoss_units_produced_sum: z.number(),
        protoss_units_score_max: z.number(),
        protoss_units_score_min: z.number(),
        protoss_units_score_sum: z.number(),
        protoss_wins_max: z.number(),
        protoss_wins_min: z.number(),
        protoss_wins_sum: z.number(),
        terran_apm_max: z.number(),
        terran_apm_min: z.number(),
        terran_apm_sum: z.number(),
        terran_disconnects_max: z.number(),
        terran_disconnects_min: z.number(),
        terran_disconnects_sum: z.number(),
        terran_draws_max: z.number(),
        terran_draws_min: z.number(),
        terran_draws_sum: z.number(),
        terran_losses_max: z.number(),
        terran_losses_min: z.number(),
        terran_losses_sum: z.number(),
        terran_play_time_max: z.number(),
        terran_play_time_min: z.number(),
        terran_play_time_sum: z.number(),
        terran_resources_gas_max: z.number(),
        terran_resources_gas_min: z.number(),
        terran_resources_gas_sum: z.number(),
        terran_resources_minerals_max: z.number(),
        terran_resources_minerals_min: z.number(),
        terran_resources_minerals_sum: z.number(),
        terran_resources_score_max: z.number(),
        terran_resources_score_min: z.number(),
        terran_resources_score_sum: z.number(),
        terran_resources_spent_max: z.number(),
        terran_resources_spent_min: z.number(),
        terran_resources_spent_sum: z.number(),
        terran_structures_constructed_max: z.number(),
        terran_structures_constructed_min: z.number(),
        terran_structures_constructed_sum: z.number(),
        terran_structures_lost_max: z.number(),
        terran_structures_lost_min: z.number(),
        terran_structures_lost_sum: z.number(),
        terran_structures_razed_max: z.number(),
        terran_structures_razed_min: z.number(),
        terran_structures_razed_sum: z.number(),
        terran_structures_score_max: z.number(),
        terran_structures_score_min: z.number(),
        terran_structures_score_sum: z.number(),
        terran_units_killed_max: z.number(),
        terran_units_killed_min: z.number(),
        terran_units_killed_sum: z.number(),
        terran_units_lost_max: z.number(),
        terran_units_lost_min: z.number(),
        terran_units_lost_sum: z.number(),
        terran_units_produced_max: z.number(),
        terran_units_produced_min: z.number(),
        terran_units_produced_sum: z.number(),
        terran_units_score_max: z.number(),
        terran_units_score_min: z.number(),
        terran_units_score_sum: z.number(),
        terran_wins_max: z.number(),
        terran_wins_min: z.number(),
        terran_wins_sum: z.number(),
        zerg_apm_max: z.number(),
        zerg_apm_min: z.number(),
        zerg_apm_sum: z.number(),
        zerg_disconnects_max: z.number(),
        zerg_disconnects_min: z.number(),
        zerg_disconnects_sum: z.number(),
        zerg_draws_max: z.number(),
        zerg_draws_min: z.number(),
        zerg_draws_sum: z.number(),
        zerg_losses_max: z.number(),
        zerg_losses_min: z.number(),
        zerg_losses_sum: z.number(),
        zerg_play_time_max: z.number(),
        zerg_play_time_min: z.number(),
        zerg_play_time_sum: z.number(),
        zerg_resources_gas_max: z.number(),
        zerg_resources_gas_min: z.number(),
        zerg_resources_gas_sum: z.number(),
        zerg_resources_minerals_max: z.number(),
        zerg_resources_minerals_min: z.number(),
        zerg_resources_minerals_sum: z.number(),
        zerg_resources_score_max: z.number(),
        zerg_resources_score_min: z.number(),
        zerg_resources_score_sum: z.number(),
        zerg_resources_spent_max: z.number(),
        zerg_resources_spent_min: z.number(),
        zerg_resources_spent_sum: z.number(),
        zerg_structures_constructed_max: z.number(),
        zerg_structures_constructed_min: z.number(),
        zerg_structures_constructed_sum: z.number(),
        zerg_structures_lost_max: z.number(),
        zerg_structures_lost_min: z.number(),
        zerg_structures_lost_sum: z.number(),
        zerg_structures_razed_max: z.number(),
        zerg_structures_razed_min: z.number(),
        zerg_structures_razed_sum: z.number(),
        zerg_structures_score_max: z.number(),
        zerg_structures_score_min: z.number(),
        zerg_structures_score_sum: z.number(),
        zerg_units_killed_max: z.number(),
        zerg_units_killed_min: z.number(),
        zerg_units_killed_sum: z.number(),
        zerg_units_lost_max: z.number(),
        zerg_units_lost_min: z.number(),
        zerg_units_lost_sum: z.number(),
        zerg_units_produced_max: z.number(),
        zerg_units_produced_min: z.number(),
        zerg_units_produced_sum: z.number(),
        zerg_units_score_max: z.number(),
        zerg_units_score_min: z.number(),
        zerg_units_score_sum: z.number(),
        zerg_wins_max: z.number(),
        zerg_wins_min: z.number(),
        zerg_wins_sum: z.number(),
      }),
      season_id: z.number(),
      toon: z.string(),
    })
  ),
  toon_guid_by_gateway: z.record(
    z.string().regex(/^\d+$/), // gateway
    z.record(z.string(), z.number()) // toon -> guid
  ),
  toons: z.array(
    z.object({
      games_last_week: z.number(),
      gateway_id: z.number(),
      guid: z.number(),
      toon: z.string(),
    })
  ),
});

export type AuroraProfileByToonSupersetResponse = z.infer<
  typeof AuroraProfileByToonSupersetResponseSchema
>;
